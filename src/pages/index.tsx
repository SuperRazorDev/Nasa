import Head from "next/head";
import Header from "@/components/header/Header";
import { GetServerSideProps } from "next";
import { IRoverData } from "@/types";
import React, { useReducer } from "react";
import Galleries from "@/components/galleries/Galleries";
import ImageLoader from "@/components/imageLoader/ImageLoader";
import Footer from "@/components/footer/Footer";
import { uploadReducer } from "@/reducers";

export interface IHomepageProps {
  data: IPhotosResponse;
}

export interface IPhotosResponse {
  photos: IRoverData[];
}

const Home: React.FC<IHomepageProps> = ({ data }) => {
  // destructuring state and dispatch, initializing fileList to empty array
  const [photosData, dispatch] = useReducer(uploadReducer, {
    fileList: [],
  });

  return (
    <>
      <Head>
        <title>NASA</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <Galleries photos={data.photos} />
      <ImageLoader data={photosData} dispatch={dispatch} />
      <Footer />
    </>
  );
};

export const getServerSideProps: GetServerSideProps<{
  data: IPhotosResponse;
}> = async ({ res }) => {
  res.setHeader(
    "Cache-Control",
    "public, s-maxage=10, stale-while-revalidate=59"
  );
  const emptyPhotos = {
    props: {
      data: {
        photos: [],
      },
    },
  };

  try {
    const response = await fetch(
      `https://api.nasa.gov/mars-photos/api/v1/rovers/curiosity/photos?sol=1000&api_key=${process.env.NASA_API_KEY}`
    );
    if (response.status >= 400) {
      return emptyPhotos;
    }
    const data = await response.json();

    return { props: { data } };
  } catch {
    return emptyPhotos;
  }
};

export default Home;
